package com.spring.learn_spring_framework.examples.a0;

import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Primary;


// Eliminate verbosity in creating Java Beans
// Public Accessor(getter and setter) methods, constructors, 
// equals, hashcode and toString are automatically created. 
// Released in JDK 16.
record Person (String name, int age, Address address) { };

record Address (String firstLine, String City) { };

@Configuration
public class HelloWorldConfiguration {
	@Bean
	public String name () {
		return "Manojit";
	}
	@Bean
	public int age () {
		return 19;
	}
	@Bean
	public Person person () {
		var person = new Person("Mano", 24, new Address("Tripathi Bhavan", "Mirzapur"));
//		person.age();
		return person;
//		return new Person("Mano", 24, new Address("Tripathi Bhavan", "Mirzapur"));
	}
	@Bean
	public Person person2MethodCall () {
		return new Person (name(), age(), address());  //name, age
	}
//	Dependency Injection (DI)  implementation
	@Bean
	public Person person3Parameters (String name, int age, Address address3) { 
		//name, age, address2
		return new Person(name, age, address3);
	}
//	No qualifying bean of type 'com.spring.learn_speing_framework.Address' 
//	available: expected single matching bean but found 2: address2,address3
	@Bean
	@Primary
	public Person person4Parameters (String name, int age, Address address) { 
		//name, age, address2			// This is Auto Wiring using Parameters
		return new Person(name, age, address);
	}
	@Bean
	public Person person5Qualifier (String name, int age, @Qualifier("address3qualifier") Address address) { 
		//name, age, address2					// This is Auto Wiring
		return new Person(name, age, address);
	}
	@Bean (name = "address2")
	@Primary
	public Address address () {
		return new Address("Tripathi Bhavan", "Mirzapur");
	}
	@Bean (name = "address3")
	@Qualifier("address3qualifier")
	public Address address3 () {
		return new Address("Wankhede Stadium", "Mumbai");
	}

}
